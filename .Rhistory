?gl
?list
?gl
swirl()
library(swirl)
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(data = 1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient","weight","bp","rating","test")
cnames <- c("patient","age",weight","bp","rating","test")
cnames <- c("patient","age","weight","bp","rating","test")
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSe
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 != 7
5 !== 7
!(5 == 7)
info()
!5 == 7
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSe)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5 > 8 || 6 != 8 && 4 >3.9
isTRUE(6>4)
identical( 'twins','twins')
xor(5==6,!FALSE)
ints <-sample(10)
ints
ints > 5
which(ints[ints > 7])
which(int >7)
which(ints >7)
any(ints < 0)
all(ints > 0)
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
info()
play()
flags[flags$saltires != 0]
flags[saltires != 0]
flags$saltires
flags[,flags$saltires = 1]
flags[,flags$saltires == 1]
flags[,flags$saltires]
flags[flags$saltires == 1,"saltires"]
flags[flags$saltires == 1]
flags[flags$saltires == 1,flags$name]
flags[flags$saltires == 1,"name""]
flags[flags$saltires == 1,"name"]
swirl()
exit
0
info()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
info()
nxt()
nxt()
nxt()
nxt()
skip()
skip()
skip()
skip()
skip()
env
sys.getenv
sys.getenv(0)
sys.getenv()
??variables
skip()
skip()
skip()
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
?lapply
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
sapply(flags,class)
cls_vect <-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags,class)
vapply(flags,class, character(1))
>tapply
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
q()
library(dataset)
library(datasets)
data(iris)
?iris
head(iris)
colMeans(iris$Sepal.Length)
mean(iris$Sepal.Length)
?apply
mean(iris$Sepal.Length)
mean(iris$Sepal.Width)
mean(iris$Petal.Length)
mean(iris$Petal.Width)
apply(iris[,1:4],2,mean)
apply(iris,2,mean)
apply(iris,1,mean)
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$mpg,mtcars$cyl,mean)
split(mtcars, mtcars$cyl)
mean(mtcars$mpg,mtcars$cyl)
tapply(mtcars$hp,mtcars$cyl,mean)
class(tapply(mtcars$hp,mtcars$cyl,mean))
a <- tapply(mtcars$hp,mtcars$cyl,mean)
a[1]
a[1,1]
a[3]-a[1]
a <- tapply(mtcars$hp,mtcars$cyl=8,mean)-tapply(mtcars$hp,mtcars$cyl=4,mean)
tapply(mtcars$hp,mtcars$cyl=8,mean)-tapply(mtcars$hp,mtcars$cyl=4,mean)
209.21429-82.63636
debug(ls)
ls
library(datasets)
data(iris)
head(iris)
tapply(iris$Sepal.Length,iris$Species)
tapply(iris$Sepal.Length,iris$Species, mean)
data(mtcars)
tapply(mtcars$cyl,mtcars$hp,mean)
tapply(mtcars$hp,mtcars$cyl,mean)
209.21429-82.63636
tapply(mtcars$cyl,mtcars$mpg,mean)
tapply(mtcars$mpg,mtcars$cyl,mean)
q()
w <- getwd()
setwd(paste(w,"/RProgramming/RCoursera/",sep=""))
Try <- read.csv("outcome-of-care-measures.csv")
test <- setkey(Try,Try$State,Try$Hospital.Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,Try$Hospital.Name)
?data.table
??data.table
install.packages("data.table")
library(data.table)
?setkey
test <- setkey(Try,Try$State,Try$Hospital.Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,Try$Hospital.Name)
Try[1,]
names(Try)
Try <- data.table(Try)
test <- setkey(Try,Try$State,Try$Hospital.Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,Try$Hospital.Name)
names(test)
names(Try)
test <- setkey(Try,Try$State,Try$Hospital.Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,Try$Hospital.Name)
State <- unique(Try$State)
State
Try[1,2]
Try[1,3]
Try[1,4]
rm(list=ls())
Try <- read.csv("outcome-of-care-measures.csv")
Try[1,4]
Try[1,2]
Try[1,4]
Try[1,5]
Try[1,6]
Try[1,3]
Try[1,4]
Try[1,6]
Try[1,7]
names(Try)
Try2 <- split(Try,Try$State)
Try2[["WV"]]
Try <- read.csv("outcome-of-care-measures.csv")
Try$Hospital.Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <- suppressWarnings(as.numeric(as.character(Try$Hospital.Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)))
Try$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <- suppressWarnings(as.numeric(as.character(Try$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)))
rankedHA <- Try[order(Try$State,Try$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,Try$Hospital.Name),]
rankedHA <- split(rankedHA,rankedHA$State)
rankedHA[["WV"]][1,c(2,7)]
states = unique(Try$State)
rankedHA[[states[1]]][1,c(2,7)]
a <- states[1]
rankedHA[[a]][1,c(2,7)]
source("rankall.R")
rankall("heart attack",3)
source("rankall.R")
rankall("heart attack",3)
source("rankall.R")
rankall("heart attack",3)
library(plyr)
rankall("heart attack",3)
source("rankall.R")
rankall("heart attack",3)
rankall("heart attack",3)
source("rankall.R")
rankall("heart attack",3)
head(rankall("heart attack",20),10)
tail(rankall("pneumonia","worst"),3)
nrow(Try[["WF"]])
nrow(Try[["WV"]])
rankedHA[[states[1]]][1,c(2,7)]
nrow(rankedHA[["WV"]])
source("rankall.R")
head(rankall("heart attack",20),10)
tail(rankall("pneumonia","worst"),3)
tail(rankall("heart failure"),10)
source("rankall.R")
tail(rankall("heart failure"),10)
source("submitscript3.R")
submit()
source("submitscript3.R")
source("rankall.R")
tail(rankall("heart failure"),10)
source("submitscript3.R")
submit()
submit()
submit()
